<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--
        1.spring容器默认的单例模式可以解决循环引用，单例默认支持
        2.spring容器原型依赖模式scope="prototype"多例模式下不能解决循环引用
    -->

    <!--depends-on 的意思就是当前这个bean如果要完成，先看depends-on指定的bean是否已经完成了初始化-->
    <!--scope="prototype"代表每次都要新建一次对象-->

    <!-- scope="singleton"时(默认)，Spring通过三级缓存解决循环依赖 -->
    <bean id="a" class="com.dc.spring.circular.dependencies.service.A" scope="singleton">
        <property name="b" ref="b"/>
    </bean>

    <bean id="b" class="com.dc.spring.circular.dependencies.service.B" scope="singleton">
        <property name="a" ref="a"/>
    </bean>

    <!-- scope="prototype"时，每次都会创建新的实例，Spring无法解决循环依赖 -->
    <!--    <bean id="a" class="com.dc.spring.circular.dependencies.service.A" scope="prototype">-->
    <!--        <property name="b" ref="b"/>-->
    <!--    </bean>-->
    <!--    -->
    <!--    <bean id="b" class="com.dc.spring.circular.dependencies.service.B" scope="prototype">-->
    <!--        <property name="a" ref="a"/>-->
    <!--    </bean>-->


</beans>